<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
    
    <!-- 激活注解方式，如果不激活注解方式扫描，则不可以使用根据注解扫描@Controller类的方式扫描Controller -->
	<context:annotation-config />
	
	<!-- 自动扫描该包，使springMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.westear.ssm" >
		<!-- DispatcherServlet上下文，只搜索@Controller标注的类，不搜其他标注的类 -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	<!-- 也可以指定文件夹扫描 -->
<!-- 	<context:component-scan base-package="com.westear.ssm.controller" /> -->
	
	<!-- 扩充了注解驱动，可以将请求参数绑定到控制器参数 -->
	<mvc:annotation-driven />
	
	<!-- 静态资源处理 css js imgs -->
	<mvc:resources location="/resources/" mapping="/resources/**"/>
	
	<!-- 避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter" 
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" /> <!-- JSON转换器 -->
			</list>
		</property>
	</bean>
	
	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver" 
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="1048576000" />
		<!-- 内存的最大值 -->
		<property name="maxInMemorySize" value="40960" />
		<!-- 启用是为了推迟文件解析，以便捕获文件大小异常 -->
		<property name="resolveLazily" value="true"></property>
	</bean>
	
	<!-- 配置ViewResolver。可用多个ViewResolver 。使用order属性排序。   InternalResourceViewResolver 放在最后 -->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="1"/>
		<property name="mediaTypes">
			<map>
				<!-- 告诉视图解析器，返回的类型为json格式 -->
				<!-- ContentNegotiatingViewResolver可以根据不同展示需求将数据转换成所需要的数据格式 -->
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
				<entry key="htm" value="text/htm" />
			</map>
		</property>
		<property name="defaultViews">
			<list>
				<!-- ModelAndView里的数据变成JSON -->
				<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
			</list>
		</property>
	</bean>
	
	<!-- 定义跳转的文件的前后缀，视图模式配置 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
</beans>